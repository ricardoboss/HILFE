import "../common.step"

list? grid = readGrid("8/example.txt")
if (grid == null) {
	return
}

map antennas = {}
forEachCell(grid, (string cell) {
	if (cell != "." && !containsKey(antennas, cell)) {
		antennas[cell] = findCoordinates(grid, cell)
	}
})

function getAntinodes = (map a, map b) {
	number dx = b["x"] - a["x"]
	number dy = b["y"] - a["y"]

	list antinodes = []
	number i = 0
	number ax = a["x"]
	number ay = a["y"]
	while (ay + i * dy >= 0 && ay + i * dy < length(grid) && ax + i * dx >= 0 && ax + i * dx < length(grid[0])) {
		number nx = ax + i * dx
		number ny = ay + i * dy

		doAdd(antinodes, {"x": nx, "y": ny})

		i++
	}

	return antinodes
}

list resultGrid = clone(grid)
foreach (string cell: list coordinates in antennas) {
	foreach (map a in coordinates) {
		foreach (map b in coordinates) {
			if (a["x"] == b["x"] && a["y"] == b["y"]) {
				continue
			}

			list antinodes = getAntinodes(a, b)
			//foreach (map b in getAntinodes(b, a)) {
			//	doAdd(antinodes, b)
			//}

			foreach (map antinode in antinodes) {
				number x = antinode["x"]
				number y = antinode["y"]

				if (y < 0 || y >= length(resultGrid) || x < 0 || x >= length(resultGrid[y])) {
					continue
				}

				resultGrid[antinode["y"]][antinode["x"]] = "#"
			}
		}
	}
}

println(countChars(resultGrid, "#"))
