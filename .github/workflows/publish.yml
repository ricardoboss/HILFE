name: Publish

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
    paths:
      - ".github/workflows/publish.yml"
      - "StepLang.CLI/publish.sh"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/publish.yml"
      - "StepLang.CLI/publish.sh"

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build & Publish

    runs-on: macos-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore --locked-mode

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build

      - name: Publish Binaries
        env:
          APPLE_SIGNING_ID: ${{ secrets.APPLE_SIGNING_ID }}
        run: pushd StepLang.CLI && ./publish.sh && popd

      - name: Upload Artifacts (step-linux-x64)
        uses: actions/upload-artifact@v3
        with:
          name: step-linux-x64
          path: StepLang.CLI/publish/step-linux-x64

      - name: Upload Artifacts (step-linux-arm64)
        uses: actions/upload-artifact@v3
        with:
          name: step-linux-arm64
          path: StepLang.CLI/publish/step-linux-arm64

      - name: Upload Artifacts (step-win-x64)
        uses: actions/upload-artifact@v3
        with:
          name: step-windows-x64
          path: StepLang.CLI/publish/step-win-x64

      - name: Upload Artifacts (step-win-arm64)
        uses: actions/upload-artifact@v3
        with:
          name: step-windows-arm64
          path: StepLang.CLI/publish/step-win-arm64

      - name: Upload Artifacts (step-osx-x64)
        uses: actions/upload-artifact@v3
        with:
          name: step-osx-x64
          path: StepLang.CLI/publish/step-osx-x64

      - name: Upload Artifacts (step-osx-arm64)
        uses: actions/upload-artifact@v3
        with:
          name: step-osx-arm64
          path: StepLang.CLI/publish/step-osx-arm64

      - name: Upload Artifacts (step)
        uses: actions/upload-artifact@v3
        with:
          name: step
          path: StepLang.CLI/publish/step.zip

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: |
            These release notes are generated automatically. For more information, please refer to the [CHANGELOG.md](https://github.com/ricardoboss/STEP/blob/main/CHANGELOG.md).
          generate_release_notes: true
          fail_on_unmatched_files: true
          draft: true
          files: |
            StepLang.CLI/publish/*
